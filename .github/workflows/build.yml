name: Build

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main

env: # environment variables (available in any part of the action)
  PYTHON_VERSION: 3.11

jobs:
  build_push:
    name: Build docker image and push to ghcr.io
    runs-on: ubuntu-latest
    steps:
      # - name: Create more disk space
      #   run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 30720 # 30G
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          # remove-docker-images: "true"

      - name: Free space log
        run: |
          echo "Free space:"
          df -h

      # - name: Git checkout
      #   uses: actions/checkout@v4
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          # push: ${{ github.event_name != 'pull_request' }}
          push: false
          # tags: ${{ steps.meta.outputs.tags }}
          tags: cprex:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Image digest
        run: |
          echo ${{ steps.push.outputs.digest }}
          docker image inspect cprex:latest
          docker history cprex:latest

    #   - name: Generate artifact attestation
    #     uses: actions/attest-build-provenance@v1
    #     with:
    #       subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
    #       subject-digest: ${{ steps.push.outputs.digest }}
    #       push-to-registry: true
